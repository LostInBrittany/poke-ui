/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import '@stencil/core';

import '@stencil/router';
import '@stencil/state-tunnel';
import {
  RouterHistory,
} from '@stencil/router';
import {
  PokeCheck,
  PokeCheckResultByZone,
  PokeConf,
  PokeService,
} from './utils/interfaces';


export namespace Components {

  interface PokeCheckFilter {
    'filter': string;
  }
  interface PokeCheckFilterAttributes extends StencilHTMLAttributes {
    'filter'?: string;
    'onFilter-change'?: (event: CustomEvent) => void;
  }

  interface PokeLogo {}
  interface PokeLogoAttributes extends StencilHTMLAttributes {}

  interface PokeSignIn {
    'history': RouterHistory;
    'pokeConf': PokeConf;
    'singinQuery': (event?: UIEvent) => void;
    'singupQuery': (event?: UIEvent) => void;
  }
  interface PokeSignInAttributes extends StencilHTMLAttributes {
    'history'?: RouterHistory;
    'onSign-in-succesful'?: (event: CustomEvent) => void;
    'pokeConf'?: PokeConf;
  }

  interface PokeUi {
    'baseUrl': string;
  }
  interface PokeUiAttributes extends StencilHTMLAttributes {
    'baseUrl'?: string;
  }

  interface PokeUptimeCheck {
    'check': PokeCheck;
    'domain': string;
    'zones': { [dynamic:string] : PokeCheckResultByZone };
  }
  interface PokeUptimeCheckAttributes extends StencilHTMLAttributes {
    'check'?: PokeCheck;
    'domain'?: string;
    'zones'?: { [dynamic:string] : PokeCheckResultByZone };
  }

  interface PokeUptimeService {
    'debug': boolean;
    'service': PokeService;
    'warp10Token': string;
    'warpEndpoint': string;
  }
  interface PokeUptimeServiceAttributes extends StencilHTMLAttributes {
    'debug'?: boolean;
    'service'?: PokeService;
    'warp10Token'?: string;
    'warpEndpoint'?: string;
  }

  interface PokeUptime {
    'debug': boolean;
    'history': RouterHistory;
    'loadServices': () => void;
    'loadWarp10Token': () => void;
    'pokeConf': PokeConf;
  }
  interface PokeUptimeAttributes extends StencilHTMLAttributes {
    'debug'?: boolean;
    'history'?: RouterHistory;
    'pokeConf'?: PokeConf;
  }
}

declare global {
  interface StencilElementInterfaces {
    'PokeCheckFilter': Components.PokeCheckFilter;
    'PokeLogo': Components.PokeLogo;
    'PokeSignIn': Components.PokeSignIn;
    'PokeUi': Components.PokeUi;
    'PokeUptimeCheck': Components.PokeUptimeCheck;
    'PokeUptimeService': Components.PokeUptimeService;
    'PokeUptime': Components.PokeUptime;
  }

  interface StencilIntrinsicElements {
    'poke-check-filter': Components.PokeCheckFilterAttributes;
    'poke-logo': Components.PokeLogoAttributes;
    'poke-sign-in': Components.PokeSignInAttributes;
    'poke-ui': Components.PokeUiAttributes;
    'poke-uptime-check': Components.PokeUptimeCheckAttributes;
    'poke-uptime-service': Components.PokeUptimeServiceAttributes;
    'poke-uptime': Components.PokeUptimeAttributes;
  }


  interface HTMLPokeCheckFilterElement extends Components.PokeCheckFilter, HTMLStencilElement {}
  var HTMLPokeCheckFilterElement: {
    prototype: HTMLPokeCheckFilterElement;
    new (): HTMLPokeCheckFilterElement;
  };

  interface HTMLPokeLogoElement extends Components.PokeLogo, HTMLStencilElement {}
  var HTMLPokeLogoElement: {
    prototype: HTMLPokeLogoElement;
    new (): HTMLPokeLogoElement;
  };

  interface HTMLPokeSignInElement extends Components.PokeSignIn, HTMLStencilElement {}
  var HTMLPokeSignInElement: {
    prototype: HTMLPokeSignInElement;
    new (): HTMLPokeSignInElement;
  };

  interface HTMLPokeUiElement extends Components.PokeUi, HTMLStencilElement {}
  var HTMLPokeUiElement: {
    prototype: HTMLPokeUiElement;
    new (): HTMLPokeUiElement;
  };

  interface HTMLPokeUptimeCheckElement extends Components.PokeUptimeCheck, HTMLStencilElement {}
  var HTMLPokeUptimeCheckElement: {
    prototype: HTMLPokeUptimeCheckElement;
    new (): HTMLPokeUptimeCheckElement;
  };

  interface HTMLPokeUptimeServiceElement extends Components.PokeUptimeService, HTMLStencilElement {}
  var HTMLPokeUptimeServiceElement: {
    prototype: HTMLPokeUptimeServiceElement;
    new (): HTMLPokeUptimeServiceElement;
  };

  interface HTMLPokeUptimeElement extends Components.PokeUptime, HTMLStencilElement {}
  var HTMLPokeUptimeElement: {
    prototype: HTMLPokeUptimeElement;
    new (): HTMLPokeUptimeElement;
  };

  interface HTMLElementTagNameMap {
    'poke-check-filter': HTMLPokeCheckFilterElement
    'poke-logo': HTMLPokeLogoElement
    'poke-sign-in': HTMLPokeSignInElement
    'poke-ui': HTMLPokeUiElement
    'poke-uptime-check': HTMLPokeUptimeCheckElement
    'poke-uptime-service': HTMLPokeUptimeServiceElement
    'poke-uptime': HTMLPokeUptimeElement
  }

  interface ElementTagNameMap {
    'poke-check-filter': HTMLPokeCheckFilterElement;
    'poke-logo': HTMLPokeLogoElement;
    'poke-sign-in': HTMLPokeSignInElement;
    'poke-ui': HTMLPokeUiElement;
    'poke-uptime-check': HTMLPokeUptimeCheckElement;
    'poke-uptime-service': HTMLPokeUptimeServiceElement;
    'poke-uptime': HTMLPokeUptimeElement;
  }


  export namespace JSX {
    export interface Element {}
    export interface IntrinsicElements extends StencilIntrinsicElements {
      [tagName: string]: any;
    }
  }
  export interface HTMLAttributes extends StencilHTMLAttributes {}

}
