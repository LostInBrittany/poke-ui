/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
/* tslint:disable */

import '@stencil/core';

import '@stencil/router';
import '@stencil/state-tunnel';


import {
  RouterHistory,
} from '@stencil/router';
import {
  PokeCheck,
  PokeCheckResultByZone,
  PokeConf,
  PokeService,
} from './utils/interfaces';


declare global {
  interface HTMLElement {
    componentOnReady?: () => Promise<this | null>;
  }

  interface HTMLStencilElement extends HTMLElement {
    componentOnReady(): Promise<this>;

    forceUpdate(): void;
  }

  interface HTMLAttributes {}

  namespace StencilComponents {

    interface PokeLogo {

    }

    interface PokeSignIn {
      'history': RouterHistory;
      'singinQuery': (event?: UIEvent) => void;
      'singupQuery': (event?: UIEvent) => void;
    }

    interface PokeUi {
      'baseUrl': string;
    }

    interface PokeUptimeCheck {
      'check': PokeCheck;
      'domain': string;
      'zones': { [dynamic:string] : PokeCheckResultByZone };
    }

    interface PokeUptimeService {
      'debug': boolean;
      'service': PokeService;
      'warp10Token': string;
      'warpEndpoint': string;
    }

    interface PokeUptime {
      'debug': boolean;
      'history': RouterHistory;
      'loadServices': () => void;
      'loadWarp10Token': () => void;
      'pokeConf': PokeConf;
    }
  }


    interface HTMLPokeLogoElement extends StencilComponents.PokeLogo, HTMLStencilElement {}

    var HTMLPokeLogoElement: {
      prototype: HTMLPokeLogoElement;
      new (): HTMLPokeLogoElement;
    };
    

    interface HTMLPokeSignInElement extends StencilComponents.PokeSignIn, HTMLStencilElement {}

    var HTMLPokeSignInElement: {
      prototype: HTMLPokeSignInElement;
      new (): HTMLPokeSignInElement;
    };
    

    interface HTMLPokeUiElement extends StencilComponents.PokeUi, HTMLStencilElement {}

    var HTMLPokeUiElement: {
      prototype: HTMLPokeUiElement;
      new (): HTMLPokeUiElement;
    };
    

    interface HTMLPokeUptimeCheckElement extends StencilComponents.PokeUptimeCheck, HTMLStencilElement {}

    var HTMLPokeUptimeCheckElement: {
      prototype: HTMLPokeUptimeCheckElement;
      new (): HTMLPokeUptimeCheckElement;
    };
    

    interface HTMLPokeUptimeServiceElement extends StencilComponents.PokeUptimeService, HTMLStencilElement {}

    var HTMLPokeUptimeServiceElement: {
      prototype: HTMLPokeUptimeServiceElement;
      new (): HTMLPokeUptimeServiceElement;
    };
    

    interface HTMLPokeUptimeElement extends StencilComponents.PokeUptime, HTMLStencilElement {}

    var HTMLPokeUptimeElement: {
      prototype: HTMLPokeUptimeElement;
      new (): HTMLPokeUptimeElement;
    };
    

  namespace JSX {
    interface Element {}
    export interface IntrinsicElements {
    'poke-logo': JSXElements.PokeLogoAttributes;
    'poke-sign-in': JSXElements.PokeSignInAttributes;
    'poke-ui': JSXElements.PokeUiAttributes;
    'poke-uptime-check': JSXElements.PokeUptimeCheckAttributes;
    'poke-uptime-service': JSXElements.PokeUptimeServiceAttributes;
    'poke-uptime': JSXElements.PokeUptimeAttributes;
    }
  }

  namespace JSXElements {

    export interface PokeLogoAttributes extends HTMLAttributes {

    }

    export interface PokeSignInAttributes extends HTMLAttributes {
      'history'?: RouterHistory;
      'onSign-in-succesful'?: (event: CustomEvent) => void;
    }

    export interface PokeUiAttributes extends HTMLAttributes {
      'baseUrl'?: string;
    }

    export interface PokeUptimeCheckAttributes extends HTMLAttributes {
      'check'?: PokeCheck;
      'domain'?: string;
      'zones'?: { [dynamic:string] : PokeCheckResultByZone };
    }

    export interface PokeUptimeServiceAttributes extends HTMLAttributes {
      'debug'?: boolean;
      'service'?: PokeService;
      'warp10Token'?: string;
      'warpEndpoint'?: string;
    }

    export interface PokeUptimeAttributes extends HTMLAttributes {
      'debug'?: boolean;
      'history'?: RouterHistory;
      'pokeConf'?: PokeConf;
    }
  }

  interface HTMLElementTagNameMap {
    'poke-logo': HTMLPokeLogoElement
    'poke-sign-in': HTMLPokeSignInElement
    'poke-ui': HTMLPokeUiElement
    'poke-uptime-check': HTMLPokeUptimeCheckElement
    'poke-uptime-service': HTMLPokeUptimeServiceElement
    'poke-uptime': HTMLPokeUptimeElement
  }

  interface ElementTagNameMap {
    'poke-logo': HTMLPokeLogoElement;
    'poke-sign-in': HTMLPokeSignInElement;
    'poke-ui': HTMLPokeUiElement;
    'poke-uptime-check': HTMLPokeUptimeCheckElement;
    'poke-uptime-service': HTMLPokeUptimeServiceElement;
    'poke-uptime': HTMLPokeUptimeElement;
  }
}
declare global { namespace JSX { interface StencilJSX {} } }

