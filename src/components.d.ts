/**
 * This is an autogenerated file created by the Stencil build process.
 * It contains typing information for all components that exist in this project
 * and imports for stencil collections that might be configured in your stencil.config.js file
 */


declare global {
  interface HTMLStencilElement extends HTMLElement {
    componentOnReady(): Promise<this>;
    componentOnReady(done: (ele?: this) => void): void;
  }
}



import {
  PokeSignIn as PokeSignIn
} from './components/poke-sign-in/poke-sign-in';

declare global {
  interface HTMLPokeSignInElement extends PokeSignIn, HTMLStencilElement {
  }
  var HTMLPokeSignInElement: {
    prototype: HTMLPokeSignInElement;
    new (): HTMLPokeSignInElement;
  };
  interface HTMLElementTagNameMap {
    "poke-sign-in": HTMLPokeSignInElement;
  }
  interface ElementTagNameMap {
    "poke-sign-in": HTMLPokeSignInElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "poke-sign-in": JSXElements.PokeSignInAttributes;
    }
  }
  namespace JSXElements {
    export interface PokeSignInAttributes extends HTMLAttributes {
      
    }
  }
}


import {
  PokeUi as PokeUi
} from './components/poke-ui/poke-ui';

declare global {
  interface HTMLPokeUiElement extends PokeUi, HTMLStencilElement {
  }
  var HTMLPokeUiElement: {
    prototype: HTMLPokeUiElement;
    new (): HTMLPokeUiElement;
  };
  interface HTMLElementTagNameMap {
    "poke-ui": HTMLPokeUiElement;
  }
  interface ElementTagNameMap {
    "poke-ui": HTMLPokeUiElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "poke-ui": JSXElements.PokeUiAttributes;
    }
  }
  namespace JSXElements {
    export interface PokeUiAttributes extends HTMLAttributes {
      baseUrl?: string;
    }
  }
}

declare global { namespace JSX { interface StencilJSX {} } }
